#!/usr/bin/env ruby

require 'thor'
require_relative '../lib/newsletter_summarizer'

class NewsletterSummarizerCLI < Thor
  desc "process", "Verarbeite alle Emails mit dem konfigurierten Subject-Filter"
  option :unread_only, type: :boolean, default: false, desc: "Nur ungelesene Emails verarbeiten"
  option :prune, type: :boolean, default: false, desc: "Nach dem Zusammenfassen die Emails im Postfach l√∂schen"
  option :no_open, type: :boolean, default: false, desc: "HTML nicht automatisch im Browser √∂ffnen"
  
  def process
    summarizer = NewsletterSummarizer.new
    
    begin
      summarizer.process_emails(unread_only: options[:unread_only], prune: options[:prune])
    ensure
      summarizer.cleanup
    end
  end

  desc "html", "Generiere HTML-Seite mit allen Zusammenfassungen und √∂ffne sie im Browser (Option: --no_open)"
  option :no_open, type: :boolean, default: false, desc: "HTML nicht automatisch im Browser √∂ffnen"
  def html
    require_relative '../lib/html_generator'
    
    puts "üìÑ Generiere HTML-Seite mit Zusammenfassungen..."
    
    begin
      html_generator = HtmlGenerator.new
      html_file = html_generator.generate_html_page
      html_generator.open_in_firefox(html_file) unless options[:no_open]
      puts "‚úÖ HTML-Seite in Firefox ge√∂ffnet"
    rescue => e
      puts "Fehler beim Generieren der HTML-Seite: #{e.message}"
    end
  end

  desc "test", "Teste die IMAP-Verbindung"
  def test
    require_relative '../lib/imap_client'
    
    puts "Newsletter Summarizer - IMAP-Verbindungstest"
    puts "============================================"
    
    begin
      client = ImapClient.new
      success = client.test_connection
      
      if success
        puts "\n‚úÖ IMAP-Verbindung erfolgreich!"
        puts "Sie k√∂nnen jetzt Emails verarbeiten mit:"
        puts "  bundle exec ruby bin/summarize process"
      else
        puts "\n‚ùå IMAP-Verbindung fehlgeschlagen!"
        puts "Bitte pr√ºfen Sie:"
        puts "  1. Ihre Zugangsdaten in der .env Datei"
        puts "  2. Die Server-Einstellungen in config/imap.yml"
        puts "  3. Ob der Server IMAP-Zugriff erlaubt"
      end
    rescue => e
      puts "Fehler beim Testen: #{e.message}"
    end
  end

  desc "version", "Zeige die Version der Anwendung"
  def version
    version_file = File.expand_path('../VERSION', __dir__)
    version = File.exist?(version_file) ? File.read(version_file).strip : '0.0.0'
    puts "Newsletter Summarizer v#{version}"
  end

  desc "reset", "L√∂scht alle Eintr√§ge verarbeiteter E-Mails (erneutes Scannen erlauben)"
  method_option :force, type: :boolean, default: false, desc: "Ohne R√ºckfrage l√∂schen"
  def reset
    unless options[:force]
      print "Sind Sie sicher, dass Sie alle Eintr√§ge l√∂schen m√∂chten? [y/N]: "
      answer = $stdin.gets.to_s.strip.downcase
      unless %w[y yes j ja].include?(answer)
        puts "Abgebrochen."
        return
      end
    end

    require_relative '../lib/database'
    db = Database.new
    before = db.processed_emails_count
    db.clear_processed_emails
    after = db.processed_emails_count
    db.close
    puts "Gel√∂scht: #{before - after} Eintr√§ge (jetzt #{after} in der DB)."
  end

  desc "prune", "L√∂scht Emails im Postfach, die bereits zusammengefasst wurden"
  def prune
    summarizer = NewsletterSummarizer.new
    begin
      summarizer.prune_processed_emails
    ensure
      summarizer.cleanup
    end
  end
end

NewsletterSummarizerCLI.start(ARGV)
