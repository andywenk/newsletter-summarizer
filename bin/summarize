#!/usr/bin/env ruby

require 'thor'
require_relative '../lib/newsletter_summarizer'

class NewsletterSummarizerCLI < Thor
  desc "process", "Process emails using the configured recipient filter"
  option :unread_only, type: :boolean, default: false, desc: "Process only unread emails"
  option :prune, type: :boolean, default: false, desc: "Delete emails from the mailbox after summarizing"
  option :no_open, type: :boolean, default: false, desc: "Do not automatically open HTML in browser"
  
  def process
    summarizer = NewsletterSummarizer.new
    
    begin
      summarizer.process_emails(unread_only: options[:unread_only], prune: options[:prune])
    ensure
      summarizer.cleanup
    end
  end

  desc "html", "Generate an HTML page with all summaries and open it in the browser (Option: --no_open)"
  option :no_open, type: :boolean, default: false, desc: "Do not automatically open HTML in browser"
  def html
    require_relative '../lib/html_generator'
    
    puts "📄 Generating HTML page with summaries..."
    
    begin
      html_generator = HtmlGenerator.new
      html_file = html_generator.generate_html_page
      html_generator.open_in_firefox(html_file) unless options[:no_open]
      puts "✅ Opened HTML page in Firefox"
    rescue => e
      puts "Error generating HTML page: #{e.message}"
    end
  end

  desc "test", "Test the IMAP connection"
  def test
    require_relative '../lib/imap_client'
    
    puts "Newsletter Summarizer - IMAP connection test"
    puts "============================================"
    
    begin
      client = ImapClient.new
      success = client.test_connection
      
      if success
        puts "\n✅ IMAP connection successful!"
        puts "You can now process emails with:"
        puts "  bundle exec ruby bin/summarize process"
      else
        puts "\n❌ IMAP connection failed!"
        puts "Please check:"
        puts "  1. Your credentials in the .env file"
        puts "  2. The server settings in config/imap.yml"
        puts "  3. Whether the server allows IMAP access"
      end
    rescue => e
      puts "Error during test: #{e.message}"
    end
  end

  desc "version", "Show application version"
  def version
    version_file = File.expand_path('../VERSION', __dir__)
    version = File.exist?(version_file) ? File.read(version_file).strip : '0.0.0'
    puts "Newsletter Summarizer v#{version}"
  end

  desc "reset", "Delete all records of processed emails (allows re-scanning)"
  method_option :force, type: :boolean, default: false, desc: "Delete without confirmation"
  def reset
    unless options[:force]
      print "Are you sure you want to delete all entries? [y/N]: "
      answer = $stdin.gets.to_s.strip.downcase
      unless %w[y yes].include?(answer)
        puts "Cancelled."
        return
      end
    end

    require_relative '../lib/database'
    db = Database.new
    before = db.processed_emails_count
    db.clear_processed_emails
    after = db.processed_emails_count
    db.close
    puts "Deleted: #{before - after} entries (now #{after} in DB)."
  end

  desc "prune", "Delete emails in the mailbox that were already summarized"
  def prune
    summarizer = NewsletterSummarizer.new
    begin
      summarizer.prune_processed_emails
    ensure
      summarizer.cleanup
    end
  end
end

NewsletterSummarizerCLI.start(ARGV)
